{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jono\\\\Documents\\\\Github\\\\monster_hunt2\\\\beast-hunt\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GRID_SIZE = 15;\nconst BOX_SIZE = 60; // Increased size\nconst EMOJI_SIZE = 40; // Increased emoji size\n\nfunction App() {\n  _s();\n  const [gameState, setGameState] = useState({\n    beast: [0, 0],\n    engineers: []\n  });\n  useEffect(() => {\n    const fetchGameState = async () => {\n      try {\n        const response = await fetch('http://localhost:5000/update');\n        const data = await response.json();\n        setGameState(data);\n      } catch (error) {\n        console.error('Error fetching game state:', error);\n      }\n    };\n    fetchGameState();\n    const intervalId = setInterval(fetchGameState, 2000);\n    return () => clearInterval(intervalId);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Beast Hunt Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-board\",\n      style: {\n        display: 'grid',\n        gridTemplateColumns: `repeat(${GRID_SIZE}, ${BOX_SIZE}px)`,\n        gap: '1px',\n        margin: '20px auto'\n      },\n      children: Array.from({\n        length: GRID_SIZE * GRID_SIZE\n      }).map((_, index) => {\n        const x = index % GRID_SIZE;\n        const y = Math.floor(index / GRID_SIZE);\n        let content = 'â¬œ';\n        if (gameState.beast[0] === x && gameState.beast[1] === y) {\n          content = 'ðŸ‘¹';\n        } else {\n          const engineer = gameState.engineers.find(eng => eng.position[0] === x && eng.position[1] === y);\n          if (engineer) {\n            content = engineer.emoji;\n          }\n        }\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: BOX_SIZE,\n            height: BOX_SIZE,\n            border: '1px solid #ccc',\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n            fontSize: `${EMOJI_SIZE}px` // Increased emoji size\n          },\n          children: content\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Game State\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Beast: (\", gameState.beast[0], \", \", gameState.beast[1], \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Engineers:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: gameState.engineers.map((engineer, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [engineer.emoji, \" \", engineer.name, \": (\", engineer.position[0], \", \", engineer.position[1], \")\"]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"2NjMWfcIvTOi11T/IdETP1imRvM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","GRID_SIZE","BOX_SIZE","EMOJI_SIZE","App","_s","gameState","setGameState","beast","engineers","fetchGameState","response","fetch","data","json","error","console","intervalId","setInterval","clearInterval","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","display","gridTemplateColumns","gap","margin","Array","from","length","map","_","index","x","y","Math","floor","content","engineer","find","eng","position","emoji","width","height","border","justifyContent","alignItems","fontSize","name","_c","$RefreshReg$"],"sources":["C:/Users/Jono/Documents/Github/monster_hunt2/beast-hunt/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\n\nconst GRID_SIZE = 15;\nconst BOX_SIZE = 60;  // Increased size\nconst EMOJI_SIZE = 40;  // Increased emoji size\n\nfunction App() {\n  const [gameState, setGameState] = useState({\n    beast: [0, 0],\n    engineers: []\n  });\n\n  useEffect(() => {\n    const fetchGameState = async () => {\n      try {\n        const response = await fetch('http://localhost:5000/update');\n        const data = await response.json();\n        setGameState(data);\n      } catch (error) {\n        console.error('Error fetching game state:', error);\n      }\n    };\n\n    fetchGameState();\n    const intervalId = setInterval(fetchGameState, 2000);\n\n    return () => clearInterval(intervalId);\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <h1>Beast Hunt Game</h1>\n      <div className=\"game-board\" style={{ display: 'grid', gridTemplateColumns: `repeat(${GRID_SIZE}, ${BOX_SIZE}px)`, gap: '1px', margin: '20px auto' }}>\n        {Array.from({ length: GRID_SIZE * GRID_SIZE }).map((_, index) => {\n          const x = index % GRID_SIZE;\n          const y = Math.floor(index / GRID_SIZE);\n          let content = 'â¬œ';\n\n          if (gameState.beast[0] === x && gameState.beast[1] === y) {\n            content = 'ðŸ‘¹';\n          } else {\n            const engineer = gameState.engineers.find(eng => eng.position[0] === x && eng.position[1] === y);\n            if (engineer) {\n              content = engineer.emoji;\n            }\n          }\n\n          return (\n            <div \n              key={index} \n              style={{ \n                width: BOX_SIZE, \n                height: BOX_SIZE, \n                border: '1px solid #ccc', \n                display: 'flex', \n                justifyContent: 'center', \n                alignItems: 'center', \n                fontSize: `${EMOJI_SIZE}px` // Increased emoji size\n              }}>\n              {content}\n            </div>\n          );\n        })}\n      </div>\n      <div>\n        <h2>Game State</h2>\n        <p>Beast: ({gameState.beast[0]}, {gameState.beast[1]})</p>\n        <h3>Engineers:</h3>\n        <ul>\n          {gameState.engineers.map((engineer, index) => (\n            <li key={index}>\n              {engineer.emoji} {engineer.name}: ({engineer.position[0]}, {engineer.position[1]})\n            </li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
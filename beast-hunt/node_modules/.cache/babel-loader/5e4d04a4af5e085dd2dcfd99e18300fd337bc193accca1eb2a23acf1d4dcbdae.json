{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jono\\\\Documents\\\\Github\\\\monster_hunt2\\\\beast-hunt\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GRID_SIZE = 10;\nconst NUM_ENGINEERS = 5;\nconst BeastHuntGame = () => {\n  _s();\n  const [gameState, setGameState] = useState({\n    beast: [0, 0],\n    engineers: Array(NUM_ENGINEERS).fill([0, 0])\n  });\n  useEffect(() => {\n    const fetchGameState = async () => {\n      // In a real application, you would fetch the game state from your Python backend\n      // For now, we'll just simulate random movement\n      setGameState(prevState => ({\n        beast: [Math.floor(Math.random() * GRID_SIZE), Math.floor(Math.random() * GRID_SIZE)],\n        engineers: prevState.engineers.map(() => [Math.floor(Math.random() * GRID_SIZE), Math.floor(Math.random() * GRID_SIZE)])\n      }));\n    };\n    const intervalId = setInterval(fetchGameState, 1000);\n    return () => clearInterval(intervalId);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-board\",\n    style: {\n      display: 'grid',\n      gridTemplateColumns: `repeat(${GRID_SIZE}, 30px)`\n    },\n    children: Array.from({\n      length: GRID_SIZE * GRID_SIZE\n    }).map((_, index) => {\n      const x = index % GRID_SIZE;\n      const y = Math.floor(index / GRID_SIZE);\n      let content = '‚¨ú';\n      if (gameState.beast[0] === x && gameState.beast[1] === y) {\n        content = 'üëπ';\n      } else if (gameState.engineers.some(pos => pos[0] === x && pos[1] === y)) {\n        content = 'üë®‚Äçüíª';\n      }\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: 30,\n          height: 30,\n          border: '1px solid #ccc',\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center'\n        },\n        children: content\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(BeastHuntGame, \"GuKDAlBW5MGF/mMSFdkfjnDZ610=\");\n_c = BeastHuntGame;\nexport default BeastHuntGame;\nvar _c;\n$RefreshReg$(_c, \"BeastHuntGame\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","GRID_SIZE","NUM_ENGINEERS","BeastHuntGame","_s","gameState","setGameState","beast","engineers","Array","fill","fetchGameState","prevState","Math","floor","random","map","intervalId","setInterval","clearInterval","className","style","display","gridTemplateColumns","children","from","length","_","index","x","y","content","some","pos","width","height","border","justifyContent","alignItems","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Jono/Documents/Github/monster_hunt2/beast-hunt/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst GRID_SIZE = 10;\nconst NUM_ENGINEERS = 5;\n\nconst BeastHuntGame = () => {\n  const [gameState, setGameState] = useState({\n    beast: [0, 0],\n    engineers: Array(NUM_ENGINEERS).fill([0, 0])\n  });\n\n  useEffect(() => {\n    const fetchGameState = async () => {\n      // In a real application, you would fetch the game state from your Python backend\n      // For now, we'll just simulate random movement\n      setGameState(prevState => ({\n        beast: [Math.floor(Math.random() * GRID_SIZE), Math.floor(Math.random() * GRID_SIZE)],\n        engineers: prevState.engineers.map(() => [\n          Math.floor(Math.random() * GRID_SIZE),\n          Math.floor(Math.random() * GRID_SIZE)\n        ])\n      }));\n    };\n\n    const intervalId = setInterval(fetchGameState, 1000);\n    return () => clearInterval(intervalId);\n  }, []);\n\n  return (\n    <div className=\"game-board\" style={{ display: 'grid', gridTemplateColumns: `repeat(${GRID_SIZE}, 30px)` }}>\n      {Array.from({ length: GRID_SIZE * GRID_SIZE }).map((_, index) => {\n        const x = index % GRID_SIZE;\n        const y = Math.floor(index / GRID_SIZE);\n        let content = '‚¨ú';\n\n        if (gameState.beast[0] === x && gameState.beast[1] === y) {\n          content = 'üëπ';\n        } else if (gameState.engineers.some(pos => pos[0] === x && pos[1] === y)) {\n          content = 'üë®‚Äçüíª';\n        }\n\n        return (\n          <div key={index} style={{ width: 30, height: 30, border: '1px solid #ccc', display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\n            {content}\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default BeastHuntGame;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jono\\\\Documents\\\\Github\\\\monster_hunt2\\\\beast-hunt\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport './App.css';\nimport { Clock, Pause, Play, RotateCcw, ArrowRight, Table } from 'lucide-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BOX_SIZE = 90;\nconst EMOJI_SIZE = 40;\nexport default function App() {\n  _s();\n  const [gameState, setGameState] = useState({\n    beast: null,\n    engineers: [],\n    walls: [],\n    game_over: false,\n    zombie_order: [],\n    beast_hidden: true,\n    turn_counter: 0,\n    grid_size: [],\n    current_turn_entity: '',\n    beast_target: null\n  });\n  const [elapsedTime, setElapsedTime] = useState(0);\n  const [isPaused, setIsPaused] = useState(false);\n  const [showResults, setShowResults] = useState(false);\n  const [results, setResults] = useState([]);\n  const GRID_WIDTH = gameState.grid_size[0];\n  const GRID_HEIGHT = gameState.grid_size[1];\n  const fetchGameState = useCallback(async () => {\n    if (isPaused) return;\n    try {\n      const response = await fetch('http://localhost:5000/update');\n      const data = await response.json();\n      if (data.update_occurred) {\n        setGameState(data);\n        setElapsedTime(prevTime => prevTime + 1);\n        if (data.game_over) {\n          setIsPaused(true);\n        }\n      }\n    } catch (error) {\n      console.error('Error fetching game state:', error);\n    }\n  }, [isPaused]);\n  useEffect(() => {\n    const intervalId = setInterval(fetchGameState, 500); // Poll more frequently\n    return () => clearInterval(intervalId);\n  }, [fetchGameState]);\n  useEffect(() => {\n    // Fetch results from the CSV file\n    // Check if we're running in development mode\n    const resultsPath = process.env.NODE_ENV === 'development' ? '/results.csv' : `${process.env.PUBLIC_URL}/results.csv`;\n    fetch(resultsPath).then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.text();\n    }).then(text => {\n      const rows = text.split('\\n').map(row => row.split(','));\n      const headers = rows.shift();\n      const data = rows.map(row => {\n        const obj = {};\n        headers.forEach((header, index) => {\n          obj[header] = row[index];\n        });\n        // Parse all 'Game' columns and calculate the total\n        let total = 0;\n        Object.keys(obj).forEach(key => {\n          if (key.startsWith('Game')) {\n            const value = parseInt(obj[key]);\n            if (!isNaN(value)) {\n              total += value;\n            }\n          }\n        });\n        obj.Total = total;\n        obj.Total = parseInt(obj['Game 1']) + parseInt(obj['Game 2']);\n        return obj;\n      });\n      setResults(data);\n    }).catch(error => console.error('Error fetching results:', error));\n  }, []);\n  const formatTime = seconds => {\n    const mins = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${mins.toString().padStart(2, '0')}:${secs.toString().padStart(2, '0')}`;\n  };\n  const handlePauseResume = () => {\n    setIsPaused(prev => !prev);\n  };\n  const handleReset = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/reset', {\n        method: 'POST'\n      });\n      const data = await response.json();\n      setGameState(data);\n      setElapsedTime(0);\n      setIsPaused(false);\n    } catch (error) {\n      console.error('Error resetting game:', error);\n    }\n  };\n  const handleToggleResults = () => {\n    setShowResults(prev => !prev);\n  };\n  const calculateTotal = player => {\n    return Object.keys(player).filter(key => key.startsWith('Game')).reduce((total, key) => {\n      const score = parseInt(player[key]);\n      return isNaN(score) ? total : total + score;\n    }, 0);\n  };\n  const getCellStyle = (x, y) => {\n    const baseStyle = {\n      width: BOX_SIZE,\n      height: BOX_SIZE,\n      backgroundColor: '#4A5568',\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center',\n      alignItems: 'center',\n      fontSize: `${EMOJI_SIZE}px`,\n      border: '1px solid #2D3748',\n      boxSizing: 'border-box',\n      position: 'relative'\n    };\n    const engineer = gameState.engineers.find(eng => eng.position[0] === x && eng.position[1] === y);\n    if (engineer) {\n      if (gameState.beast_target['Beast'] === engineer.name && !gameState.beast_hidden) {\n        baseStyle.border = '3px solid red';\n      } else {\n        const zombieTargets = Object.entries(gameState.beast_target).filter(([key, value]) => key !== 'Beast' && value === engineer.name);\n        if (zombieTargets.length > 0) {\n          baseStyle.border = '3px solid blue';\n        }\n      }\n    }\n    return baseStyle;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col items-center min-h-screen bg-gray-900 text-white p-8\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex bg-gray-900 text-white p-4 w-full justify-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-header flex justify-between items-center\",\n        style: {\n          maxWidth: `${GRID_WIDTH * BOX_SIZE}px`\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-4xl font-bold\",\n          children: \"The Beast from 3 East\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"game-controls flex justify-between items-center mt-4\",\n          style: {\n            maxWidth: `${GRID_WIDTH * BOX_SIZE}px`\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handlePauseResume,\n            className: \"p-2 bg-blue-500 rounded hover:bg-blue-600 transition-colors\",\n            children: isPaused ? /*#__PURE__*/_jsxDEV(Play, {\n              size: 24\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 27\n            }, this) : /*#__PURE__*/_jsxDEV(Pause, {\n              size: 24\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 48\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleReset,\n            className: \"p-2 bg-red-500 rounded hover:bg-red-600 transition-colors\",\n            children: /*#__PURE__*/_jsxDEV(RotateCcw, {\n              size: 24\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleToggleResults,\n            className: \"p-2 bg-green-500 rounded hover:bg-green-600 transition-colors\",\n            children: /*#__PURE__*/_jsxDEV(Table, {\n              size: 24\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"game-clock justify-center flex items-center\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-xl\",\n            children: [\"Turn: \", gameState.turn_counter]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"game-clock flex items-center\",\n          children: [/*#__PURE__*/_jsxDEV(Clock, {\n            className: \"mr-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-xl\",\n            children: formatTime(elapsedTime)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-header flex justify-between items-center\",\n      style: {\n        maxWidth: `${GRID_WIDTH * BOX_SIZE}px`\n      },\n      children: [gameState.game_over && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col items-center min-h-screen bg-gray-300 text-white p-8\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-2xl font-bold\",\n          children: \"Game Over!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"The game has ended. Final scores have been saved to results.csv\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 7\n      }, this), gameState.turn_counter >= 10 && gameState.turn_counter <= 13 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col items-center bg-yellow-500 text-black p-4 rounded-lg animate-pulse\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-3xl font-bold\",\n          children: \"LEEERROOOOYY!!!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-content relative\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-board-container flex-grow\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"game-board\",\n          style: {\n            display: 'grid',\n            gridTemplateColumns: `repeat(${GRID_WIDTH}, ${BOX_SIZE}px)`,\n            gridTemplateRows: `repeat(${GRID_HEIGHT}, ${BOX_SIZE}px)`,\n            gap: '1px',\n            padding: '10px',\n            backgroundColor: '#2D3748',\n            borderRadius: '8px',\n            boxShadow: '0 4px 6px rgba(0, 0, 0, 0.1)'\n          },\n          children: Array.from({\n            length: GRID_WIDTH * GRID_HEIGHT\n          }).map((_, index) => {\n            const x = index % GRID_WIDTH;\n            const y = Math.floor(index / GRID_WIDTH);\n            let content = '';\n            let initials = '';\n            if (!gameState.beast_hidden && gameState.beast && gameState.beast[0] === x && gameState.beast[1] === y) {\n              content = '👹';\n              initials = 'Beast';\n            } else {\n              const engineer = gameState.engineers.find(eng => eng.position[0] === x && eng.position[1] === y);\n              if (engineer) {\n                content = engineer.emoji;\n                initials = engineer.name;\n              }\n            }\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              style: getCellStyle(x, y),\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: content\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 265,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  fontSize: '12px',\n                  position: 'absolute',\n                  bottom: '2px'\n                },\n                children: initials\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 266,\n                columnNumber: 19\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"turn-order-table mt-4 p-4 bg-gray-800 rounded\",\n        style: {\n          maxWidth: `${GRID_WIDTH * BOX_SIZE}px`\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-bold mb-2 text-white\",\n          children: \"Turn Order\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"w-full\",\n          children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: gameState.current_turn_entity === 'Beast' && /*#__PURE__*/_jsxDEV(ArrowRight, {\n                  size: 24\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 279,\n                  columnNumber: 65\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 279,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"\\uD83D\\uDC79\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 280,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"Beast\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 281,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 13\n            }, this), gameState.engineers.map((engineer, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: gameState.current_turn_entity === engineer.name && /*#__PURE__*/_jsxDEV(ArrowRight, {\n                  size: 24\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 285,\n                  columnNumber: 73\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 285,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: engineer.emoji\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 286,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: engineer.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 287,\n                columnNumber: 17\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 15\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 7\n    }, this), gameState.zombie_order.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"zombie-order mt-4 p-4 bg-gray-800 rounded\",\n      style: {\n        maxWidth: `${GRID_WIDTH * BOX_SIZE}px`\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-xl font-bold mb-2 text-white\",\n        children: \"Zombified:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n        className: \"list-decimal pl-5 text-white\",\n        children: gameState.zombie_order.map((name, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"mb-1\",\n          children: name\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 9\n    }, this), showResults && results.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"results-table mt-4 p-4 bg-gray-800 rounded\",\n      style: {\n        maxWidth: `${GRID_WIDTH * BOX_SIZE}px`,\n        width: '100%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-xl font-bold mb-2 text-white\",\n        children: \"Game Results\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"w-full border-collapse\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            className: \"bg-gray-700\",\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"text-left p-2 border border-gray-600\",\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 313,\n              columnNumber: 17\n            }, this), Object.keys(results[0]).filter(key => key.startsWith('Game')).map(gameKey => /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"text-left p-2 border border-gray-600\",\n              children: gameKey\n            }, gameKey, false, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 19\n            }, this)), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"text-left p-2 border border-gray-600\",\n              children: \"Total\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 317,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: results.map((player, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            className: index % 2 === 0 ? 'bg-gray-800' : 'bg-gray-700',\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"p-2 border border-gray-600\",\n              children: player.Name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 323,\n              columnNumber: 19\n            }, this), Object.keys(player).filter(key => key.startsWith('Game')).map(gameKey => /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"p-2 border border-gray-600\",\n              children: player[gameKey] || '-'\n            }, gameKey, false, {\n              fileName: _jsxFileName,\n              lineNumber: 325,\n              columnNumber: 21\n            }, this)), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"p-2 border border-gray-600\",\n              children: calculateTotal(player)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 327,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 166,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"1kA6Jd9hFvrN7kJPbrPcM6SaL0s=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","Clock","Pause","Play","RotateCcw","ArrowRight","Table","jsxDEV","_jsxDEV","BOX_SIZE","EMOJI_SIZE","App","_s","gameState","setGameState","beast","engineers","walls","game_over","zombie_order","beast_hidden","turn_counter","grid_size","current_turn_entity","beast_target","elapsedTime","setElapsedTime","isPaused","setIsPaused","showResults","setShowResults","results","setResults","GRID_WIDTH","GRID_HEIGHT","fetchGameState","response","fetch","data","json","update_occurred","prevTime","error","console","intervalId","setInterval","clearInterval","resultsPath","process","env","NODE_ENV","PUBLIC_URL","then","ok","Error","text","rows","split","map","row","headers","shift","obj","forEach","header","index","total","Object","keys","key","startsWith","value","parseInt","isNaN","Total","catch","formatTime","seconds","mins","Math","floor","secs","toString","padStart","handlePauseResume","prev","handleReset","method","handleToggleResults","calculateTotal","player","filter","reduce","score","getCellStyle","x","y","baseStyle","width","height","backgroundColor","display","flexDirection","justifyContent","alignItems","fontSize","border","boxSizing","position","engineer","find","eng","name","zombieTargets","entries","length","className","children","style","maxWidth","fileName","_jsxFileName","lineNumber","columnNumber","onClick","size","gridTemplateColumns","gridTemplateRows","gap","padding","borderRadius","boxShadow","Array","from","_","content","initials","emoji","bottom","gameKey","Name","_c","$RefreshReg$"],"sources":["C:/Users/Jono/Documents/Github/monster_hunt2/beast-hunt/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport './App.css';\nimport { Clock, Pause, Play, RotateCcw, ArrowRight, Table } from 'lucide-react';\n\nconst BOX_SIZE = 90;\nconst EMOJI_SIZE = 40;\n\nexport default function App() {\n  const [gameState, setGameState] = useState({\n    beast: null,\n    engineers: [],\n    walls: [],\n    game_over: false,\n    zombie_order: [],\n    beast_hidden: true,\n    turn_counter: 0,\n    grid_size: [],\n    current_turn_entity: '',\n    beast_target: null\n  });\n\n  const [elapsedTime, setElapsedTime] = useState(0);\n  const [isPaused, setIsPaused] = useState(false);\n  const [showResults, setShowResults] = useState(false);\n  const [results, setResults] = useState([]);\n  const GRID_WIDTH = gameState.grid_size[0];\n  const GRID_HEIGHT = gameState.grid_size[1];\n\n  const fetchGameState = useCallback(async () => {\n    if (isPaused) return;\n    try {\n      const response = await fetch('http://localhost:5000/update');\n      const data = await response.json();\n      if (data.update_occurred) {\n        setGameState(data);\n        setElapsedTime(prevTime => prevTime + 1);\n\n        if (data.game_over) {\n          setIsPaused(true);\n        }\n      }\n    } catch (error) {\n      console.error('Error fetching game state:', error);\n    }\n  }, [isPaused]);\n\n  useEffect(() => {\n    const intervalId = setInterval(fetchGameState, 500);  // Poll more frequently\n    return () => clearInterval(intervalId);\n  }, [fetchGameState]);\n\n  useEffect(() => {\n    // Fetch results from the CSV file\n    // Check if we're running in development mode\n    const resultsPath = process.env.NODE_ENV === 'development' \n      ? '/results.csv' \n      : `${process.env.PUBLIC_URL}/results.csv`;\n\n    fetch(resultsPath)\n      .then(response => {\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        return response.text();\n      })\n\n      .then(text => {\n        const rows = text.split('\\n').map(row => row.split(','));\n        const headers = rows.shift();\n        const data = rows.map(row => {\n          const obj = {};\n          headers.forEach((header, index) => {\n            obj[header] = row[index];\n          });\n          // Parse all 'Game' columns and calculate the total\n          let total = 0;\n          Object.keys(obj).forEach(key => {\n            if (key.startsWith('Game')) {\n              const value = parseInt(obj[key]);\n              if (!isNaN(value)) {\n                total += value;\n              }\n            }\n          });\n          obj.Total = total;\n          obj.Total = parseInt(obj['Game 1']) + parseInt(obj['Game 2']);\n          return obj;\n        });\n        setResults(data);\n      })\n      .catch(error => console.error('Error fetching results:', error));\n  }, []);\n\n\n  const formatTime = (seconds) => {\n    const mins = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${mins.toString().padStart(2, '0')}:${secs.toString().padStart(2, '0')}`;\n  };\n\n  const handlePauseResume = () => {\n    setIsPaused(prev => !prev);\n  };\n\n  const handleReset = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/reset', { method: 'POST' });\n      const data = await response.json();\n      setGameState(data);\n      setElapsedTime(0);\n      setIsPaused(false);\n    } catch (error) {\n      console.error('Error resetting game:', error);\n    }\n  };\n\n  const handleToggleResults = () => {\n    setShowResults(prev => !prev);\n  };\n\n  const calculateTotal = (player) => {\n    return Object.keys(player)\n      .filter(key => key.startsWith('Game'))\n      .reduce((total, key) => {\n        const score = parseInt(player[key]);\n        return isNaN(score) ? total : total + score;\n      }, 0);\n  };\n\n\n  const getCellStyle = (x, y) => {\n    const baseStyle = {\n      width: BOX_SIZE,\n      height: BOX_SIZE,\n      backgroundColor: '#4A5568',\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center',\n      alignItems: 'center',\n      fontSize: `${EMOJI_SIZE}px`,\n      border: '1px solid #2D3748',\n      boxSizing: 'border-box',\n      position: 'relative',\n    };\n  \n    const engineer = gameState.engineers.find(\n      (eng) => eng.position[0] === x && eng.position[1] === y\n    );\n  \n    if (engineer) {\n      if (gameState.beast_target['Beast'] === engineer.name && !gameState.beast_hidden) {\n        baseStyle.border = '3px solid red';\n      } else {\n        const zombieTargets = Object.entries(gameState.beast_target)\n          .filter(([key, value]) => key !== 'Beast' && value === engineer.name);\n        if (zombieTargets.length > 0) {\n          baseStyle.border = '3px solid blue';\n        }\n      }\n    }\n  \n    return baseStyle;\n  };\n\n  return (\n    <div className=\"flex flex-col items-center min-h-screen bg-gray-900 text-white p-8\">\n      <div className=\"flex bg-gray-900 text-white p-4 w-full justify-center\">\n        <div \n          className=\"game-header flex justify-between items-center\"\n          style={{ maxWidth: `${GRID_WIDTH * BOX_SIZE}px` }}\n        >\n          <h1 className=\"text-4xl font-bold\">The Beast from 3 East</h1>\n          <div \n            className=\"game-controls flex justify-between items-center mt-4\"\n            style={{ maxWidth: `${GRID_WIDTH * BOX_SIZE}px` }}\n          >\n            <button \n              onClick={handlePauseResume}\n              className=\"p-2 bg-blue-500 rounded hover:bg-blue-600 transition-colors\"\n            >\n              {isPaused ? <Play size={24} /> : <Pause size={24} />}\n            </button>\n            <button \n              onClick={handleReset}\n              className=\"p-2 bg-red-500 rounded hover:bg-red-600 transition-colors\"\n            >\n              <RotateCcw size={24} />\n            </button>\n            <button \n              onClick={handleToggleResults}\n              className=\"p-2 bg-green-500 rounded hover:bg-green-600 transition-colors\"\n            >\n              <Table size={24} />\n            </button>\n          </div>\n          <div className=\"game-clock justify-center flex items-center\">\n            <span className=\"text-xl\">Turn: {gameState.turn_counter}</span>\n          </div>\n          <div className=\"game-clock flex items-center\">\n            <Clock className=\"mr-2\" />\n            <span className=\"text-xl\">{formatTime(elapsedTime)}</span>\n          </div>\n        </div>\n        \n      </div>\n      <div \n          className=\"game-header flex justify-between items-center\"\n          style={{ maxWidth: `${GRID_WIDTH * BOX_SIZE}px` }}\n        >\n    {gameState.game_over && (\n      <div className=\"flex flex-col items-center min-h-screen bg-gray-300 text-white p-8\">\n            <h2 className=\"text-2xl font-bold\">Game Over!</h2>\n            <p>The game has ended. Final scores have been saved to results.csv</p>\n          </div>\n        )}\n      {gameState.turn_counter >= 10 && gameState.turn_counter <= 13 && (\n        <div className=\"flex flex-col items-center bg-yellow-500 text-black p-4 rounded-lg animate-pulse\">\n          <h2 className=\"text-3xl font-bold\">LEEERROOOOYY!!!</h2>\n        </div>\n      )}\n      </div>\n    \n        \n\n      \n      <div className=\"game-content relative\">\n        <div className=\"game-board-container flex-grow\">\n          <div\n            className=\"game-board\"\n            style={{\n              display: 'grid',\n              gridTemplateColumns: `repeat(${GRID_WIDTH}, ${BOX_SIZE}px)`,\n              gridTemplateRows: `repeat(${GRID_HEIGHT}, ${BOX_SIZE}px)`,\n              gap: '1px',\n              padding: '10px',\n              backgroundColor: '#2D3748',\n              borderRadius: '8px',\n              boxShadow: '0 4px 6px rgba(0, 0, 0, 0.1)',\n            }}\n          >\n            {Array.from({ length: GRID_WIDTH * GRID_HEIGHT }).map((_, index) => {\n              const x = index % GRID_WIDTH;\n              const y = Math.floor(index / GRID_WIDTH);\n              let content = '';\n              let initials = '';\n\n              if (!gameState.beast_hidden && gameState.beast && gameState.beast[0] === x && gameState.beast[1] === y) {\n                content = '👹';\n                initials = 'Beast';\n              } else {\n                const engineer = gameState.engineers.find(\n                  (eng) => eng.position[0] === x && eng.position[1] === y\n                );\n                if (engineer) {\n                  content = engineer.emoji;\n                  initials = engineer.name;\n                }\n              }\n\n              return (\n                <div\n                  key={index}\n                  style={getCellStyle(x, y)}\n                >\n                  <span>{content}</span>\n                  <span style={{ fontSize: '12px', position: 'absolute', bottom: '2px' }}>{initials}</span>\n                </div>\n              );\n            })}\n          </div>\n        </div>\n        \n      {/* New Turn Order Table */}\n      <div className=\"turn-order-table mt-4 p-4 bg-gray-800 rounded\" style={{ maxWidth: `${GRID_WIDTH * BOX_SIZE}px` }}>\n        <h2 className=\"text-xl font-bold mb-2 text-white\">Turn Order</h2>\n        <table className=\"w-full\">\n          <tbody>\n            <tr>\n              <td>{gameState.current_turn_entity === 'Beast' && <ArrowRight size={24} />}</td>\n              <td>👹</td>\n              <td>Beast</td>\n            </tr>\n            {gameState.engineers.map((engineer, index) => (\n              <tr key={index}>\n                <td>{gameState.current_turn_entity === engineer.name && <ArrowRight size={24} />}</td>\n                <td>{engineer.emoji}</td>\n                <td>{engineer.name}</td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n      </div>\n\n      {gameState.zombie_order.length > 0 && (\n        <div className=\"zombie-order mt-4 p-4 bg-gray-800 rounded\" \n        style={{ maxWidth: `${GRID_WIDTH * BOX_SIZE}px` }}>\n          <h2 className=\"text-xl font-bold mb-2 text-white\">Zombified:</h2>\n          <ol className=\"list-decimal pl-5 text-white\">\n            {gameState.zombie_order.map((name, index) => (\n              <li key={index} className=\"mb-1\">{name}</li>\n            ))}\n          </ol>\n        </div>\n      )}\n      \n      {showResults && results.length > 0 && (\n        <div className=\"results-table mt-4 p-4 bg-gray-800 rounded\" style={{ maxWidth: `${GRID_WIDTH * BOX_SIZE}px`, width: '100%' }}>\n          <h2 className=\"text-xl font-bold mb-2 text-white\">Game Results</h2>\n          <table className=\"w-full border-collapse\">\n            <thead>\n              <tr className=\"bg-gray-700\">\n                <th className=\"text-left p-2 border border-gray-600\">Name</th>\n                {Object.keys(results[0]).filter(key => key.startsWith('Game')).map(gameKey => (\n                  <th key={gameKey} className=\"text-left p-2 border border-gray-600\">{gameKey}</th>\n                ))}\n                <th className=\"text-left p-2 border border-gray-600\">Total</th>\n              </tr>\n            </thead>\n            <tbody>\n              {results.map((player, index) => (\n                <tr key={index} className={index % 2 === 0 ? 'bg-gray-800' : 'bg-gray-700'}>\n                  <td className=\"p-2 border border-gray-600\">{player.Name}</td>\n                  {Object.keys(player).filter(key => key.startsWith('Game')).map(gameKey => (\n                    <td key={gameKey} className=\"p-2 border border-gray-600\">{player[gameKey] || '-'}</td>\n                  ))}\n                  <td className=\"p-2 border border-gray-600\">{calculateTotal(player)}</td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      )}\n\n    </div>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
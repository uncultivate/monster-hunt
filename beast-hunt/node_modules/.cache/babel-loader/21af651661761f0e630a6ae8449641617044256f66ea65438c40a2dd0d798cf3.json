{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jono\\\\Documents\\\\Github\\\\monster_hunt2\\\\beast-hunt\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const [gameState, setGameState] = useState({\n    beast: [0, 0],\n    engineers: [],\n    walls: []\n  });\n  const [elapsedTime, setElapsedTime] = useState(0);\n  useEffect(() => {\n    const startTime = Date.now();\n    const fetchGameState = async () => {\n      try {\n        const response = await fetch('http://localhost:5000/update');\n        const data = await response.json();\n        setGameState(data);\n        setElapsedTime(Math.floor((Date.now() - startTime) / 1000));\n      } catch (error) {\n        console.error('Error fetching game state:', error);\n      }\n    };\n    fetchGameState();\n    const intervalId = setInterval(fetchGameState, 1000);\n    return () => clearInterval(intervalId);\n  }, []);\n  const formatTime = seconds => {\n    const mins = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${mins.toString().padStart(2, '0')}:${secs.toString().padStart(2, '0')}`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col items-center justify-center min-h-screen bg-gray-900 text-white p-8\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-4xl font-bold mb-8\",\n      children: \"Beast Hunt Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex space-x-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-board\",\n        style: {\n          display: 'grid',\n          gridTemplateColumns: `repeat(${GRID_WIDTH}, ${BOX_SIZE}px)`,\n          gridTemplateRows: `repeat(${GRID_HEIGHT}, ${BOX_SIZE}px)`,\n          gap: '1px',\n          backgroundColor: '#2d3748',\n          padding: '10px',\n          borderRadius: '8px',\n          boxShadow: '0 4px 6px rgba(0, 0, 0, 0.1)'\n        },\n        children: Array.from({\n          length: GRID_WIDTH * GRID_HEIGHT\n        }).map((_, index) => {\n          const x = index % GRID_WIDTH;\n          const y = Math.floor(index / GRID_WIDTH);\n          let content = '';\n          let bgColor = '#4a5568';\n          if (gameState.beast[0] === x && gameState.beast[1] === y) {\n            content = 'ðŸ‘¹';\n          } else {\n            const engineer = gameState.engineers.find(eng => eng.position[0] === x && eng.position[1] === y);\n            if (engineer) {\n              content = engineer.emoji;\n            }\n          }\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              width: BOX_SIZE,\n              height: BOX_SIZE,\n              backgroundColor: bgColor,\n              display: 'flex',\n              justifyContent: 'center',\n              alignItems: 'center',\n              fontSize: `${EMOJI_SIZE}px`\n            },\n            children: content\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4 flex items-center\",\n          children: [/*#__PURE__*/_jsxDEV(Clock, {\n            className: \"mr-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-xl\",\n            children: formatTime(elapsedTime)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"table-auto border-collapse\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"px-4 py-2\",\n                children: \"Entity\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"px-4 py-2\",\n                children: \"Position\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"border px-4 py-2\",\n                children: \"\\uD83D\\uDC79 Beast\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"border px-4 py-2\",\n                children: [\"(\", gameState.beast[0], \", \", gameState.beast[1], \")\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 15\n            }, this), gameState.engineers.map((engineer, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"border px-4 py-2\",\n                children: [engineer.emoji, \" \", engineer.name]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"border px-4 py-2\",\n                children: [\"(\", engineer.position[0], \", \", engineer.position[1], \")\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 19\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"+PKYMdwWRPb0PyZW7Qva9ri1Bsw=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["App","_s","gameState","setGameState","useState","beast","engineers","walls","elapsedTime","setElapsedTime","useEffect","startTime","Date","now","fetchGameState","response","fetch","data","json","Math","floor","error","console","intervalId","setInterval","clearInterval","formatTime","seconds","mins","secs","toString","padStart","_jsxDEV","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","display","gridTemplateColumns","GRID_WIDTH","BOX_SIZE","gridTemplateRows","GRID_HEIGHT","gap","backgroundColor","padding","borderRadius","boxShadow","Array","from","length","map","_","index","x","y","content","bgColor","engineer","find","eng","position","emoji","width","height","justifyContent","alignItems","fontSize","EMOJI_SIZE","Clock","name","_c","$RefreshReg$"],"sources":["C:/Users/Jono/Documents/Github/monster_hunt2/beast-hunt/src/App.js"],"sourcesContent":["export default function App() {\n  const [gameState, setGameState] = useState({\n    beast: [0, 0],\n    engineers: [],\n    walls: []\n  });\n\n  const [elapsedTime, setElapsedTime] = useState(0);\n\n  useEffect(() => {\n    const startTime = Date.now();\n    const fetchGameState = async () => {\n      try {\n        const response = await fetch('http://localhost:5000/update');\n        const data = await response.json();\n        setGameState(data);\n        setElapsedTime(Math.floor((Date.now() - startTime) / 1000));\n      } catch (error) {\n        console.error('Error fetching game state:', error);\n      }\n    };\n\n    fetchGameState();\n    const intervalId = setInterval(fetchGameState, 1000);\n\n    return () => clearInterval(intervalId);\n  }, []);\n\n  const formatTime = (seconds) => {\n    const mins = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${mins.toString().padStart(2, '0')}:${secs.toString().padStart(2, '0')}`;\n  };\n\n  return (\n    <div className=\"flex flex-col items-center justify-center min-h-screen bg-gray-900 text-white p-8\">\n      <h1 className=\"text-4xl font-bold mb-8\">Beast Hunt Game</h1>\n      <div className=\"flex space-x-8\">\n        <div\n          className=\"game-board\"\n          style={{\n            display: 'grid',\n            gridTemplateColumns: `repeat(${GRID_WIDTH}, ${BOX_SIZE}px)`,\n            gridTemplateRows: `repeat(${GRID_HEIGHT}, ${BOX_SIZE}px)`,\n            gap: '1px',\n            backgroundColor: '#2d3748',\n            padding: '10px',\n            borderRadius: '8px',\n            boxShadow: '0 4px 6px rgba(0, 0, 0, 0.1)',\n          }}\n        >\n          {Array.from({ length: GRID_WIDTH * GRID_HEIGHT }).map((_, index) => {\n            const x = index % GRID_WIDTH;\n            const y = Math.floor(index / GRID_WIDTH);\n            let content = '';\n            let bgColor = '#4a5568';\n\n            if (gameState.beast[0] === x && gameState.beast[1] === y) {\n              content = 'ðŸ‘¹';\n            } else {\n              const engineer = gameState.engineers.find(\n                (eng) => eng.position[0] === x && eng.position[1] === y\n              );\n              if (engineer) {\n                content = engineer.emoji;\n              }\n            }\n\n            return (\n              <div\n                key={index}\n                style={{\n                  width: BOX_SIZE,\n                  height: BOX_SIZE,\n                  backgroundColor: bgColor,\n                  display: 'flex',\n                  justifyContent: 'center',\n                  alignItems: 'center',\n                  fontSize: `${EMOJI_SIZE}px`,\n                }}\n              >\n                {content}\n              </div>\n            );\n          })}\n        </div>\n\n        {/* Game Info Table Positioned to the Right */}\n        <div className=\"game-info\">\n          <div className=\"mb-4 flex items-center\">\n            <Clock className=\"mr-2\" />\n            <span className=\"text-xl\">{formatTime(elapsedTime)}</span>\n          </div>\n          <table className=\"table-auto border-collapse\">\n            <thead>\n              <tr>\n                <th className=\"px-4 py-2\">Entity</th>\n                <th className=\"px-4 py-2\">Position</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr>\n                <td className=\"border px-4 py-2\">ðŸ‘¹ Beast</td>\n                <td className=\"border px-4 py-2\">\n                  ({gameState.beast[0]}, {gameState.beast[1]})\n                </td>\n              </tr>\n              {gameState.engineers.map((engineer, index) => (\n                <tr key={index}>\n                  <td className=\"border px-4 py-2\">\n                    {engineer.emoji} {engineer.name}\n                  </td>\n                  <td className=\"border px-4 py-2\">\n                    ({engineer.position[0]}, {engineer.position[1]})\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}